E[2024.15.10]E
D[2024.16.08]D
T[[Creating the Website] Devlog #1: Hello World!]T
S[Website introduction and overview of the devlogs section.]S
Hello, and welcome to my website.

I'll write about my projects here, beginning with this website.


>> Website Pages:

1. Home: Where users may navigate to other pages.
2. Portfolio: Where I'll curate my best works and display them.
3. Projects: Display my newest to oldest projects.
4. Devlogs: Where I can provide explanation behind my ideas and works.
5. Artworks: Display my recent artworks.
6. Contact: Provide a way to contact me.


>> Creating the Website:

At first I used only HTML and CSS to build the website, but I ultimately decided on using React instead. 
It's easy to develop with and the reusable components allow for quick development.

I started with the Create React App template, because I previously worked with it for my assignments.
However, I reconsidered using it since it used packages that were outdated.
I looked for an alternative and found Vite's React app template.
It's regularly maintained and their documentation was helpful in deploying my website.

Additional packages installed:
- React Router


>> Overview of Devlogs Section:

I decided to work on the Devlogs page first because I was more familiar with listing posts. 
I also wanted to start writing devlogs about the projects first.

For this project, I didn't want to start with an external database to keep my text files.
The text files are stored on the Github repository along with the website.
Text files are labeled by [year/day/month/count], where count is the devlog order for that day.
A directory listing these file names is also added to map and access the devlogs.

There are four components for displaying the devlogs.

- Devlogs: Main page displaying list of logs, (fetch the directory, pass the ids into Logs)
- Logs: Map each log based on ids passed in from Devlogs
- LogSummary: Display a title and brief description of a linked devlog
- Log: Display the entire contents of the devlog

For LogSummary and Log, fetch the text file and send that info to be processed in parseLogData().
In that info, I added some cues to make it easier to process and display them.
After locating the index of these cues, I collect each type of data: title, date, summary, body, and display them.


>> Deploying the Website:

I used the workflow provided at this link for my use case.
"https://vite.dev/guide/static-deploy.html#github-pages"

I tested deployment with a basic app.
React Router's BrowserRouter paths work when links are clicked within the website.
They don't work when paths are manually typed in the address bar. 
So I found a workaround by Rafael Pedicini at "https://github.com/rafgraph/spa-github-pages".
This redirects the user back to the correct path in the website.
It'll be added to the website soon.


>> Additional Notes:

Consider...
- adding react-markdown so the devlogs for visual interest.
- renaming the devlogs/logs
- continuing to work on the CSS while keeping it simple


>> Ending Thoughts:

The website is not done yet, so I'll continue to write about it until it's complete.
It's good to write about my progress, because I'll look back on it later and see what I'll need to improve on.

Thank you for reading.